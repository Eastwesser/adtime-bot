package bot

import (
	"context"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"go.uber.org/zap"
)

// RegisterVinylHandlers registers all vinyl-related handlers
func (b *Bot) RegisterVinylHandlers() {
    b.handlers[StepVinylSelection] = b.HandleVinylSelection
    // Add more vinyl-related steps if needed
}

// HandleVinylMenu shows the vinyl services menu
func (b *Bot) HandleVinylMenu(ctx context.Context, chatID int64) {
    msg := `üé® –í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É –¥–ª—è –ø–ª–µ–Ω–∫–∏ ORACAL:
1. –ü–µ—á–∞—Ç—å –Ω–∞ –ø–ª–µ–Ω–∫–µ
2. –†–µ–∑–∫–∞ –ø–ª–µ–Ω–∫–∏
3. –õ–∞–º–∏–Ω–∞—Ü–∏—è + —Ä–µ–∑–∫–∞
4. –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞`
    
    b.SendMessage(tgbotapi.NewMessage(chatID, msg), b.CreateVinylServicesKeyboard())
}

// HandleVinylSelection handles selection of a specific vinyl service
func (b *Bot) HandleVinylSelection(ctx context.Context, chatID int64, service string) {
    const operation = "bot.HandleVinylSelection"
    
    if err := b.state.SetService(ctx, chatID, service); err != nil {
        b.logger.Error("Failed to set vinyl service",
            zap.String("operation", operation),
            zap.Int64("chat_id", chatID),
            zap.Error(err))
        b.SendError(chatID, "–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏")
        return
    }

    msg := fmt.Sprintf("üîß –í—ã –≤—ã–±—Ä–∞–ª–∏: %s\n–£–∫–∞–∂–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n1. –†–∞–∑–º–µ—Ä –≤ –º¬≤\n2. –¶–≤–µ—Ç–Ω–æ—Å—Ç—å", service)
    options := []string{"0.5 –º¬≤", "1 –º¬≤", "2 –º¬≤", "5 –º¬≤"}

    if err := b.state.SetStep(ctx, chatID, StepVinylSelection); err != nil {
        b.logger.Error("Failed to set vinyl selection step",
            zap.String("operation", operation),
            zap.Int64("chat_id", chatID),
            zap.Error(err))
    }

    b.SendMessage(tgbotapi.NewMessage(chatID, msg), b.CreateOptionsKeyboard(options))
}

// HandleVinylOption handles selection of vinyl options (size, color etc)
func (b *Bot) HandleVinylOption(ctx context.Context, chatID int64, option string) {
    // Implement option handling logic here
    // This would be called from ProcessMessage when in StepVinylSelection
}