package bot

import (
	"adtime-bot/internal/storage"
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func (b *Bot) CreateMainMenuKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("/start"),
			tgbotapi.NewKeyboardButton("/help"),
		),
	)
}

func (b *Bot) CreateConfirmationKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üîÅ –°–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É"),
			tgbotapi.NewKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑"),
		),
	)
}

func (b *Bot) CreateContactRequestKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButtonContact("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"),
		),
	)
}

func (b *Bot) CreatePrivacyAgreementKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"),
		),
	)
}

func (b *Bot) CreateOrderInitKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("‚úÖ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑"),
		),
	)
}

func (b *Bot) CreateDateSelectionKeyboard() tgbotapi.ReplyKeyboardMarkup {
    return tgbotapi.NewReplyKeyboard(
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–°–µ–≥–æ–¥–Ω—è"),
            tgbotapi.NewKeyboardButton("–ó–∞–≤—Ç—Ä–∞"),
        ),
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—É –≤—Ä—É—á–Ω—É—é"),
        ),
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥"),
        ),
    )
}

func (b *Bot) CreateDimensionsKeyboard() tgbotapi.ReplyKeyboardMarkup {
    return tgbotapi.NewReplyKeyboard(
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("30 40"),
            tgbotapi.NewKeyboardButton("50 40"),
        ),
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥"),
        ),
    )
}


func (b *Bot) CreateDateConfirmationKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üîÅ –°–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É"),
			tgbotapi.NewKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–∞—Ç—É"),
		),
	)
}

func (b *Bot) CreatePhoneInputKeyboard() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButtonContact("üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç"),
		),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é"),
		),
	)
}

func (b *Bot) CreateServiceTypeKeyboard() tgbotapi.ReplyKeyboardMarkup {
    return tgbotapi.NewReplyKeyboard(
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–ù–∞—Ç—É—Ä–∞–ª—å–Ω–∞—è –∫–æ–∂–∞"),
            tgbotapi.NewKeyboardButton("–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–æ–∂–∞"),
        ),
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–ó–∞–º—à–∞"),
            tgbotapi.NewKeyboardButton("–î—Ä—É–≥–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞"),
        ),
        tgbotapi.NewKeyboardButtonRow(
            tgbotapi.NewKeyboardButton("–ù–∞–∑–∞–¥"),
        ),
    )
}

func (b *Bot) CreateTextureSelectionKeyboard(textures []storage.Texture) tgbotapi.InlineKeyboardMarkup {
    var rows [][]tgbotapi.InlineKeyboardButton
    const maxButtonsPerRow = 2

	if len(textures) == 0 {
        return tgbotapi.NewInlineKeyboardMarkup() // Return empty keyboard if no textures
    }
    
    // Group textures into rows
    for i := 0; i < len(textures); i += maxButtonsPerRow {
        end := min(i + maxButtonsPerRow, len(textures))
        
        var row []tgbotapi.InlineKeyboardButton
        for _, texture := range textures[i:end] {
            btn := tgbotapi.NewInlineKeyboardButtonData(
                fmt.Sprintf("%s (%.2f‚ÇΩ/–¥–º¬≤)", texture.Name, texture.PricePerDM2),
                fmt.Sprintf("texture:%s", texture.ID),
            )
            row = append(row, btn)
        }
        rows = append(rows, row)
    }
    
    // Add cancel button
    cancelBtn := tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel")
    rows = append(rows, []tgbotapi.InlineKeyboardButton{cancelBtn})
    
    return tgbotapi.NewInlineKeyboardMarkup(rows...)
}
